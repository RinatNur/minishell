# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.17

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Disable VCS-based implicit rules.
% : %,v


# Disable VCS-based implicit rules.
% : RCS/%


# Disable VCS-based implicit rules.
% : RCS/%,v


# Disable VCS-based implicit rules.
% : SCCS/s.%


# Disable VCS-based implicit rules.
% : s.%


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake

# The command to remove a file.
RM = /Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/jheat/minishell_git_my

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/jheat/minishell_git_my/cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/jheat/minishell_git_my/cmake-build-debug/CMakeFiles /Users/jheat/minishell_git_my/cmake-build-debug/CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/jheat/minishell_git_my/cmake-build-debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named minishell_git_my

# Build rule for target.
minishell_git_my: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 minishell_git_my
.PHONY : minishell_git_my

# fast build rule for target.
minishell_git_my/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/build
.PHONY : minishell_git_my/fast

fill_list.o: fill_list.c.o

.PHONY : fill_list.o

# target to build an object file
fill_list.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/fill_list.c.o
.PHONY : fill_list.c.o

fill_list.i: fill_list.c.i

.PHONY : fill_list.i

# target to preprocess a source file
fill_list.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/fill_list.c.i
.PHONY : fill_list.c.i

fill_list.s: fill_list.c.s

.PHONY : fill_list.s

# target to generate assembly for a file
fill_list.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/fill_list.c.s
.PHONY : fill_list.c.s

ft_cd.o: ft_cd.c.o

.PHONY : ft_cd.o

# target to build an object file
ft_cd.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_cd.c.o
.PHONY : ft_cd.c.o

ft_cd.i: ft_cd.c.i

.PHONY : ft_cd.i

# target to preprocess a source file
ft_cd.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_cd.c.i
.PHONY : ft_cd.c.i

ft_cd.s: ft_cd.c.s

.PHONY : ft_cd.s

# target to generate assembly for a file
ft_cd.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_cd.c.s
.PHONY : ft_cd.c.s

ft_check_redirects.o: ft_check_redirects.c.o

.PHONY : ft_check_redirects.o

# target to build an object file
ft_check_redirects.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_check_redirects.c.o
.PHONY : ft_check_redirects.c.o

ft_check_redirects.i: ft_check_redirects.c.i

.PHONY : ft_check_redirects.i

# target to preprocess a source file
ft_check_redirects.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_check_redirects.c.i
.PHONY : ft_check_redirects.c.i

ft_check_redirects.s: ft_check_redirects.c.s

.PHONY : ft_check_redirects.s

# target to generate assembly for a file
ft_check_redirects.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_check_redirects.c.s
.PHONY : ft_check_redirects.c.s

ft_echo.o: ft_echo.c.o

.PHONY : ft_echo.o

# target to build an object file
ft_echo.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_echo.c.o
.PHONY : ft_echo.c.o

ft_echo.i: ft_echo.c.i

.PHONY : ft_echo.i

# target to preprocess a source file
ft_echo.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_echo.c.i
.PHONY : ft_echo.c.i

ft_echo.s: ft_echo.c.s

.PHONY : ft_echo.s

# target to generate assembly for a file
ft_echo.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_echo.c.s
.PHONY : ft_echo.c.s

ft_env.o: ft_env.c.o

.PHONY : ft_env.o

# target to build an object file
ft_env.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_env.c.o
.PHONY : ft_env.c.o

ft_env.i: ft_env.c.i

.PHONY : ft_env.i

# target to preprocess a source file
ft_env.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_env.c.i
.PHONY : ft_env.c.i

ft_env.s: ft_env.c.s

.PHONY : ft_env.s

# target to generate assembly for a file
ft_env.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_env.c.s
.PHONY : ft_env.c.s

ft_error.o: ft_error.c.o

.PHONY : ft_error.o

# target to build an object file
ft_error.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_error.c.o
.PHONY : ft_error.c.o

ft_error.i: ft_error.c.i

.PHONY : ft_error.i

# target to preprocess a source file
ft_error.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_error.c.i
.PHONY : ft_error.c.i

ft_error.s: ft_error.c.s

.PHONY : ft_error.s

# target to generate assembly for a file
ft_error.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_error.c.s
.PHONY : ft_error.c.s

ft_exec.o: ft_exec.c.o

.PHONY : ft_exec.o

# target to build an object file
ft_exec.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_exec.c.o
.PHONY : ft_exec.c.o

ft_exec.i: ft_exec.c.i

.PHONY : ft_exec.i

# target to preprocess a source file
ft_exec.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_exec.c.i
.PHONY : ft_exec.c.i

ft_exec.s: ft_exec.c.s

.PHONY : ft_exec.s

# target to generate assembly for a file
ft_exec.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_exec.c.s
.PHONY : ft_exec.c.s

ft_exit.o: ft_exit.c.o

.PHONY : ft_exit.o

# target to build an object file
ft_exit.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_exit.c.o
.PHONY : ft_exit.c.o

ft_exit.i: ft_exit.c.i

.PHONY : ft_exit.i

# target to preprocess a source file
ft_exit.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_exit.c.i
.PHONY : ft_exit.c.i

ft_exit.s: ft_exit.c.s

.PHONY : ft_exit.s

# target to generate assembly for a file
ft_exit.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_exit.c.s
.PHONY : ft_exit.c.s

ft_export.o: ft_export.c.o

.PHONY : ft_export.o

# target to build an object file
ft_export.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_export.c.o
.PHONY : ft_export.c.o

ft_export.i: ft_export.c.i

.PHONY : ft_export.i

# target to preprocess a source file
ft_export.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_export.c.i
.PHONY : ft_export.c.i

ft_export.s: ft_export.c.s

.PHONY : ft_export.s

# target to generate assembly for a file
ft_export.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_export.c.s
.PHONY : ft_export.c.s

ft_find_path.o: ft_find_path.c.o

.PHONY : ft_find_path.o

# target to build an object file
ft_find_path.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_find_path.c.o
.PHONY : ft_find_path.c.o

ft_find_path.i: ft_find_path.c.i

.PHONY : ft_find_path.i

# target to preprocess a source file
ft_find_path.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_find_path.c.i
.PHONY : ft_find_path.c.i

ft_find_path.s: ft_find_path.c.s

.PHONY : ft_find_path.s

# target to generate assembly for a file
ft_find_path.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_find_path.c.s
.PHONY : ft_find_path.c.s

ft_pipe.o: ft_pipe.c.o

.PHONY : ft_pipe.o

# target to build an object file
ft_pipe.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_pipe.c.o
.PHONY : ft_pipe.c.o

ft_pipe.i: ft_pipe.c.i

.PHONY : ft_pipe.i

# target to preprocess a source file
ft_pipe.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_pipe.c.i
.PHONY : ft_pipe.c.i

ft_pipe.s: ft_pipe.c.s

.PHONY : ft_pipe.s

# target to generate assembly for a file
ft_pipe.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_pipe.c.s
.PHONY : ft_pipe.c.s

ft_pwd.o: ft_pwd.c.o

.PHONY : ft_pwd.o

# target to build an object file
ft_pwd.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_pwd.c.o
.PHONY : ft_pwd.c.o

ft_pwd.i: ft_pwd.c.i

.PHONY : ft_pwd.i

# target to preprocess a source file
ft_pwd.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_pwd.c.i
.PHONY : ft_pwd.c.i

ft_pwd.s: ft_pwd.c.s

.PHONY : ft_pwd.s

# target to generate assembly for a file
ft_pwd.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_pwd.c.s
.PHONY : ft_pwd.c.s

ft_redirect.o: ft_redirect.c.o

.PHONY : ft_redirect.o

# target to build an object file
ft_redirect.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_redirect.c.o
.PHONY : ft_redirect.c.o

ft_redirect.i: ft_redirect.c.i

.PHONY : ft_redirect.i

# target to preprocess a source file
ft_redirect.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_redirect.c.i
.PHONY : ft_redirect.c.i

ft_redirect.s: ft_redirect.c.s

.PHONY : ft_redirect.s

# target to generate assembly for a file
ft_redirect.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_redirect.c.s
.PHONY : ft_redirect.c.s

ft_unset.o: ft_unset.c.o

.PHONY : ft_unset.o

# target to build an object file
ft_unset.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_unset.c.o
.PHONY : ft_unset.c.o

ft_unset.i: ft_unset.c.i

.PHONY : ft_unset.i

# target to preprocess a source file
ft_unset.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_unset.c.i
.PHONY : ft_unset.c.i

ft_unset.s: ft_unset.c.s

.PHONY : ft_unset.s

# target to generate assembly for a file
ft_unset.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_unset.c.s
.PHONY : ft_unset.c.s

ft_write.o: ft_write.c.o

.PHONY : ft_write.o

# target to build an object file
ft_write.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_write.c.o
.PHONY : ft_write.c.o

ft_write.i: ft_write.c.i

.PHONY : ft_write.i

# target to preprocess a source file
ft_write.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_write.c.i
.PHONY : ft_write.c.i

ft_write.s: ft_write.c.s

.PHONY : ft_write.s

# target to generate assembly for a file
ft_write.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/ft_write.c.s
.PHONY : ft_write.c.s

get_value_from_env.o: get_value_from_env.c.o

.PHONY : get_value_from_env.o

# target to build an object file
get_value_from_env.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/get_value_from_env.c.o
.PHONY : get_value_from_env.c.o

get_value_from_env.i: get_value_from_env.c.i

.PHONY : get_value_from_env.i

# target to preprocess a source file
get_value_from_env.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/get_value_from_env.c.i
.PHONY : get_value_from_env.c.i

get_value_from_env.s: get_value_from_env.c.s

.PHONY : get_value_from_env.s

# target to generate assembly for a file
get_value_from_env.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/get_value_from_env.c.s
.PHONY : get_value_from_env.c.s

libft/ft_atoi.o: libft/ft_atoi.c.o

.PHONY : libft/ft_atoi.o

# target to build an object file
libft/ft_atoi.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_atoi.c.o
.PHONY : libft/ft_atoi.c.o

libft/ft_atoi.i: libft/ft_atoi.c.i

.PHONY : libft/ft_atoi.i

# target to preprocess a source file
libft/ft_atoi.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_atoi.c.i
.PHONY : libft/ft_atoi.c.i

libft/ft_atoi.s: libft/ft_atoi.c.s

.PHONY : libft/ft_atoi.s

# target to generate assembly for a file
libft/ft_atoi.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_atoi.c.s
.PHONY : libft/ft_atoi.c.s

libft/ft_bzero.o: libft/ft_bzero.c.o

.PHONY : libft/ft_bzero.o

# target to build an object file
libft/ft_bzero.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_bzero.c.o
.PHONY : libft/ft_bzero.c.o

libft/ft_bzero.i: libft/ft_bzero.c.i

.PHONY : libft/ft_bzero.i

# target to preprocess a source file
libft/ft_bzero.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_bzero.c.i
.PHONY : libft/ft_bzero.c.i

libft/ft_bzero.s: libft/ft_bzero.c.s

.PHONY : libft/ft_bzero.s

# target to generate assembly for a file
libft/ft_bzero.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_bzero.c.s
.PHONY : libft/ft_bzero.c.s

libft/ft_calloc.o: libft/ft_calloc.c.o

.PHONY : libft/ft_calloc.o

# target to build an object file
libft/ft_calloc.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_calloc.c.o
.PHONY : libft/ft_calloc.c.o

libft/ft_calloc.i: libft/ft_calloc.c.i

.PHONY : libft/ft_calloc.i

# target to preprocess a source file
libft/ft_calloc.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_calloc.c.i
.PHONY : libft/ft_calloc.c.i

libft/ft_calloc.s: libft/ft_calloc.c.s

.PHONY : libft/ft_calloc.s

# target to generate assembly for a file
libft/ft_calloc.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_calloc.c.s
.PHONY : libft/ft_calloc.c.s

libft/ft_isalnum.o: libft/ft_isalnum.c.o

.PHONY : libft/ft_isalnum.o

# target to build an object file
libft/ft_isalnum.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isalnum.c.o
.PHONY : libft/ft_isalnum.c.o

libft/ft_isalnum.i: libft/ft_isalnum.c.i

.PHONY : libft/ft_isalnum.i

# target to preprocess a source file
libft/ft_isalnum.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isalnum.c.i
.PHONY : libft/ft_isalnum.c.i

libft/ft_isalnum.s: libft/ft_isalnum.c.s

.PHONY : libft/ft_isalnum.s

# target to generate assembly for a file
libft/ft_isalnum.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isalnum.c.s
.PHONY : libft/ft_isalnum.c.s

libft/ft_isalpha.o: libft/ft_isalpha.c.o

.PHONY : libft/ft_isalpha.o

# target to build an object file
libft/ft_isalpha.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isalpha.c.o
.PHONY : libft/ft_isalpha.c.o

libft/ft_isalpha.i: libft/ft_isalpha.c.i

.PHONY : libft/ft_isalpha.i

# target to preprocess a source file
libft/ft_isalpha.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isalpha.c.i
.PHONY : libft/ft_isalpha.c.i

libft/ft_isalpha.s: libft/ft_isalpha.c.s

.PHONY : libft/ft_isalpha.s

# target to generate assembly for a file
libft/ft_isalpha.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isalpha.c.s
.PHONY : libft/ft_isalpha.c.s

libft/ft_isascii.o: libft/ft_isascii.c.o

.PHONY : libft/ft_isascii.o

# target to build an object file
libft/ft_isascii.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isascii.c.o
.PHONY : libft/ft_isascii.c.o

libft/ft_isascii.i: libft/ft_isascii.c.i

.PHONY : libft/ft_isascii.i

# target to preprocess a source file
libft/ft_isascii.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isascii.c.i
.PHONY : libft/ft_isascii.c.i

libft/ft_isascii.s: libft/ft_isascii.c.s

.PHONY : libft/ft_isascii.s

# target to generate assembly for a file
libft/ft_isascii.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isascii.c.s
.PHONY : libft/ft_isascii.c.s

libft/ft_isdigit.o: libft/ft_isdigit.c.o

.PHONY : libft/ft_isdigit.o

# target to build an object file
libft/ft_isdigit.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isdigit.c.o
.PHONY : libft/ft_isdigit.c.o

libft/ft_isdigit.i: libft/ft_isdigit.c.i

.PHONY : libft/ft_isdigit.i

# target to preprocess a source file
libft/ft_isdigit.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isdigit.c.i
.PHONY : libft/ft_isdigit.c.i

libft/ft_isdigit.s: libft/ft_isdigit.c.s

.PHONY : libft/ft_isdigit.s

# target to generate assembly for a file
libft/ft_isdigit.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isdigit.c.s
.PHONY : libft/ft_isdigit.c.s

libft/ft_isprint.o: libft/ft_isprint.c.o

.PHONY : libft/ft_isprint.o

# target to build an object file
libft/ft_isprint.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isprint.c.o
.PHONY : libft/ft_isprint.c.o

libft/ft_isprint.i: libft/ft_isprint.c.i

.PHONY : libft/ft_isprint.i

# target to preprocess a source file
libft/ft_isprint.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isprint.c.i
.PHONY : libft/ft_isprint.c.i

libft/ft_isprint.s: libft/ft_isprint.c.s

.PHONY : libft/ft_isprint.s

# target to generate assembly for a file
libft/ft_isprint.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_isprint.c.s
.PHONY : libft/ft_isprint.c.s

libft/ft_itoa.o: libft/ft_itoa.c.o

.PHONY : libft/ft_itoa.o

# target to build an object file
libft/ft_itoa.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_itoa.c.o
.PHONY : libft/ft_itoa.c.o

libft/ft_itoa.i: libft/ft_itoa.c.i

.PHONY : libft/ft_itoa.i

# target to preprocess a source file
libft/ft_itoa.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_itoa.c.i
.PHONY : libft/ft_itoa.c.i

libft/ft_itoa.s: libft/ft_itoa.c.s

.PHONY : libft/ft_itoa.s

# target to generate assembly for a file
libft/ft_itoa.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_itoa.c.s
.PHONY : libft/ft_itoa.c.s

libft/ft_lstadd_back.o: libft/ft_lstadd_back.c.o

.PHONY : libft/ft_lstadd_back.o

# target to build an object file
libft/ft_lstadd_back.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstadd_back.c.o
.PHONY : libft/ft_lstadd_back.c.o

libft/ft_lstadd_back.i: libft/ft_lstadd_back.c.i

.PHONY : libft/ft_lstadd_back.i

# target to preprocess a source file
libft/ft_lstadd_back.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstadd_back.c.i
.PHONY : libft/ft_lstadd_back.c.i

libft/ft_lstadd_back.s: libft/ft_lstadd_back.c.s

.PHONY : libft/ft_lstadd_back.s

# target to generate assembly for a file
libft/ft_lstadd_back.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstadd_back.c.s
.PHONY : libft/ft_lstadd_back.c.s

libft/ft_lstadd_front.o: libft/ft_lstadd_front.c.o

.PHONY : libft/ft_lstadd_front.o

# target to build an object file
libft/ft_lstadd_front.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstadd_front.c.o
.PHONY : libft/ft_lstadd_front.c.o

libft/ft_lstadd_front.i: libft/ft_lstadd_front.c.i

.PHONY : libft/ft_lstadd_front.i

# target to preprocess a source file
libft/ft_lstadd_front.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstadd_front.c.i
.PHONY : libft/ft_lstadd_front.c.i

libft/ft_lstadd_front.s: libft/ft_lstadd_front.c.s

.PHONY : libft/ft_lstadd_front.s

# target to generate assembly for a file
libft/ft_lstadd_front.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstadd_front.c.s
.PHONY : libft/ft_lstadd_front.c.s

libft/ft_lstlast.o: libft/ft_lstlast.c.o

.PHONY : libft/ft_lstlast.o

# target to build an object file
libft/ft_lstlast.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstlast.c.o
.PHONY : libft/ft_lstlast.c.o

libft/ft_lstlast.i: libft/ft_lstlast.c.i

.PHONY : libft/ft_lstlast.i

# target to preprocess a source file
libft/ft_lstlast.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstlast.c.i
.PHONY : libft/ft_lstlast.c.i

libft/ft_lstlast.s: libft/ft_lstlast.c.s

.PHONY : libft/ft_lstlast.s

# target to generate assembly for a file
libft/ft_lstlast.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstlast.c.s
.PHONY : libft/ft_lstlast.c.s

libft/ft_lstnew.o: libft/ft_lstnew.c.o

.PHONY : libft/ft_lstnew.o

# target to build an object file
libft/ft_lstnew.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstnew.c.o
.PHONY : libft/ft_lstnew.c.o

libft/ft_lstnew.i: libft/ft_lstnew.c.i

.PHONY : libft/ft_lstnew.i

# target to preprocess a source file
libft/ft_lstnew.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstnew.c.i
.PHONY : libft/ft_lstnew.c.i

libft/ft_lstnew.s: libft/ft_lstnew.c.s

.PHONY : libft/ft_lstnew.s

# target to generate assembly for a file
libft/ft_lstnew.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstnew.c.s
.PHONY : libft/ft_lstnew.c.s

libft/ft_lstsize.o: libft/ft_lstsize.c.o

.PHONY : libft/ft_lstsize.o

# target to build an object file
libft/ft_lstsize.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstsize.c.o
.PHONY : libft/ft_lstsize.c.o

libft/ft_lstsize.i: libft/ft_lstsize.c.i

.PHONY : libft/ft_lstsize.i

# target to preprocess a source file
libft/ft_lstsize.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstsize.c.i
.PHONY : libft/ft_lstsize.c.i

libft/ft_lstsize.s: libft/ft_lstsize.c.s

.PHONY : libft/ft_lstsize.s

# target to generate assembly for a file
libft/ft_lstsize.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_lstsize.c.s
.PHONY : libft/ft_lstsize.c.s

libft/ft_memccpy.o: libft/ft_memccpy.c.o

.PHONY : libft/ft_memccpy.o

# target to build an object file
libft/ft_memccpy.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memccpy.c.o
.PHONY : libft/ft_memccpy.c.o

libft/ft_memccpy.i: libft/ft_memccpy.c.i

.PHONY : libft/ft_memccpy.i

# target to preprocess a source file
libft/ft_memccpy.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memccpy.c.i
.PHONY : libft/ft_memccpy.c.i

libft/ft_memccpy.s: libft/ft_memccpy.c.s

.PHONY : libft/ft_memccpy.s

# target to generate assembly for a file
libft/ft_memccpy.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memccpy.c.s
.PHONY : libft/ft_memccpy.c.s

libft/ft_memchr.o: libft/ft_memchr.c.o

.PHONY : libft/ft_memchr.o

# target to build an object file
libft/ft_memchr.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memchr.c.o
.PHONY : libft/ft_memchr.c.o

libft/ft_memchr.i: libft/ft_memchr.c.i

.PHONY : libft/ft_memchr.i

# target to preprocess a source file
libft/ft_memchr.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memchr.c.i
.PHONY : libft/ft_memchr.c.i

libft/ft_memchr.s: libft/ft_memchr.c.s

.PHONY : libft/ft_memchr.s

# target to generate assembly for a file
libft/ft_memchr.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memchr.c.s
.PHONY : libft/ft_memchr.c.s

libft/ft_memcmp.o: libft/ft_memcmp.c.o

.PHONY : libft/ft_memcmp.o

# target to build an object file
libft/ft_memcmp.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memcmp.c.o
.PHONY : libft/ft_memcmp.c.o

libft/ft_memcmp.i: libft/ft_memcmp.c.i

.PHONY : libft/ft_memcmp.i

# target to preprocess a source file
libft/ft_memcmp.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memcmp.c.i
.PHONY : libft/ft_memcmp.c.i

libft/ft_memcmp.s: libft/ft_memcmp.c.s

.PHONY : libft/ft_memcmp.s

# target to generate assembly for a file
libft/ft_memcmp.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memcmp.c.s
.PHONY : libft/ft_memcmp.c.s

libft/ft_memcpy.o: libft/ft_memcpy.c.o

.PHONY : libft/ft_memcpy.o

# target to build an object file
libft/ft_memcpy.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memcpy.c.o
.PHONY : libft/ft_memcpy.c.o

libft/ft_memcpy.i: libft/ft_memcpy.c.i

.PHONY : libft/ft_memcpy.i

# target to preprocess a source file
libft/ft_memcpy.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memcpy.c.i
.PHONY : libft/ft_memcpy.c.i

libft/ft_memcpy.s: libft/ft_memcpy.c.s

.PHONY : libft/ft_memcpy.s

# target to generate assembly for a file
libft/ft_memcpy.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memcpy.c.s
.PHONY : libft/ft_memcpy.c.s

libft/ft_memmove.o: libft/ft_memmove.c.o

.PHONY : libft/ft_memmove.o

# target to build an object file
libft/ft_memmove.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memmove.c.o
.PHONY : libft/ft_memmove.c.o

libft/ft_memmove.i: libft/ft_memmove.c.i

.PHONY : libft/ft_memmove.i

# target to preprocess a source file
libft/ft_memmove.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memmove.c.i
.PHONY : libft/ft_memmove.c.i

libft/ft_memmove.s: libft/ft_memmove.c.s

.PHONY : libft/ft_memmove.s

# target to generate assembly for a file
libft/ft_memmove.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memmove.c.s
.PHONY : libft/ft_memmove.c.s

libft/ft_memset.o: libft/ft_memset.c.o

.PHONY : libft/ft_memset.o

# target to build an object file
libft/ft_memset.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memset.c.o
.PHONY : libft/ft_memset.c.o

libft/ft_memset.i: libft/ft_memset.c.i

.PHONY : libft/ft_memset.i

# target to preprocess a source file
libft/ft_memset.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memset.c.i
.PHONY : libft/ft_memset.c.i

libft/ft_memset.s: libft/ft_memset.c.s

.PHONY : libft/ft_memset.s

# target to generate assembly for a file
libft/ft_memset.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_memset.c.s
.PHONY : libft/ft_memset.c.s

libft/ft_putchar_fd.o: libft/ft_putchar_fd.c.o

.PHONY : libft/ft_putchar_fd.o

# target to build an object file
libft/ft_putchar_fd.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putchar_fd.c.o
.PHONY : libft/ft_putchar_fd.c.o

libft/ft_putchar_fd.i: libft/ft_putchar_fd.c.i

.PHONY : libft/ft_putchar_fd.i

# target to preprocess a source file
libft/ft_putchar_fd.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putchar_fd.c.i
.PHONY : libft/ft_putchar_fd.c.i

libft/ft_putchar_fd.s: libft/ft_putchar_fd.c.s

.PHONY : libft/ft_putchar_fd.s

# target to generate assembly for a file
libft/ft_putchar_fd.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putchar_fd.c.s
.PHONY : libft/ft_putchar_fd.c.s

libft/ft_putendl_fd.o: libft/ft_putendl_fd.c.o

.PHONY : libft/ft_putendl_fd.o

# target to build an object file
libft/ft_putendl_fd.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putendl_fd.c.o
.PHONY : libft/ft_putendl_fd.c.o

libft/ft_putendl_fd.i: libft/ft_putendl_fd.c.i

.PHONY : libft/ft_putendl_fd.i

# target to preprocess a source file
libft/ft_putendl_fd.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putendl_fd.c.i
.PHONY : libft/ft_putendl_fd.c.i

libft/ft_putendl_fd.s: libft/ft_putendl_fd.c.s

.PHONY : libft/ft_putendl_fd.s

# target to generate assembly for a file
libft/ft_putendl_fd.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putendl_fd.c.s
.PHONY : libft/ft_putendl_fd.c.s

libft/ft_putnbr_fd.o: libft/ft_putnbr_fd.c.o

.PHONY : libft/ft_putnbr_fd.o

# target to build an object file
libft/ft_putnbr_fd.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putnbr_fd.c.o
.PHONY : libft/ft_putnbr_fd.c.o

libft/ft_putnbr_fd.i: libft/ft_putnbr_fd.c.i

.PHONY : libft/ft_putnbr_fd.i

# target to preprocess a source file
libft/ft_putnbr_fd.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putnbr_fd.c.i
.PHONY : libft/ft_putnbr_fd.c.i

libft/ft_putnbr_fd.s: libft/ft_putnbr_fd.c.s

.PHONY : libft/ft_putnbr_fd.s

# target to generate assembly for a file
libft/ft_putnbr_fd.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putnbr_fd.c.s
.PHONY : libft/ft_putnbr_fd.c.s

libft/ft_putstr_fd.o: libft/ft_putstr_fd.c.o

.PHONY : libft/ft_putstr_fd.o

# target to build an object file
libft/ft_putstr_fd.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putstr_fd.c.o
.PHONY : libft/ft_putstr_fd.c.o

libft/ft_putstr_fd.i: libft/ft_putstr_fd.c.i

.PHONY : libft/ft_putstr_fd.i

# target to preprocess a source file
libft/ft_putstr_fd.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putstr_fd.c.i
.PHONY : libft/ft_putstr_fd.c.i

libft/ft_putstr_fd.s: libft/ft_putstr_fd.c.s

.PHONY : libft/ft_putstr_fd.s

# target to generate assembly for a file
libft/ft_putstr_fd.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_putstr_fd.c.s
.PHONY : libft/ft_putstr_fd.c.s

libft/ft_split.o: libft/ft_split.c.o

.PHONY : libft/ft_split.o

# target to build an object file
libft/ft_split.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_split.c.o
.PHONY : libft/ft_split.c.o

libft/ft_split.i: libft/ft_split.c.i

.PHONY : libft/ft_split.i

# target to preprocess a source file
libft/ft_split.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_split.c.i
.PHONY : libft/ft_split.c.i

libft/ft_split.s: libft/ft_split.c.s

.PHONY : libft/ft_split.s

# target to generate assembly for a file
libft/ft_split.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_split.c.s
.PHONY : libft/ft_split.c.s

libft/ft_strchr.o: libft/ft_strchr.c.o

.PHONY : libft/ft_strchr.o

# target to build an object file
libft/ft_strchr.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strchr.c.o
.PHONY : libft/ft_strchr.c.o

libft/ft_strchr.i: libft/ft_strchr.c.i

.PHONY : libft/ft_strchr.i

# target to preprocess a source file
libft/ft_strchr.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strchr.c.i
.PHONY : libft/ft_strchr.c.i

libft/ft_strchr.s: libft/ft_strchr.c.s

.PHONY : libft/ft_strchr.s

# target to generate assembly for a file
libft/ft_strchr.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strchr.c.s
.PHONY : libft/ft_strchr.c.s

libft/ft_strdup.o: libft/ft_strdup.c.o

.PHONY : libft/ft_strdup.o

# target to build an object file
libft/ft_strdup.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strdup.c.o
.PHONY : libft/ft_strdup.c.o

libft/ft_strdup.i: libft/ft_strdup.c.i

.PHONY : libft/ft_strdup.i

# target to preprocess a source file
libft/ft_strdup.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strdup.c.i
.PHONY : libft/ft_strdup.c.i

libft/ft_strdup.s: libft/ft_strdup.c.s

.PHONY : libft/ft_strdup.s

# target to generate assembly for a file
libft/ft_strdup.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strdup.c.s
.PHONY : libft/ft_strdup.c.s

libft/ft_strjoin.o: libft/ft_strjoin.c.o

.PHONY : libft/ft_strjoin.o

# target to build an object file
libft/ft_strjoin.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strjoin.c.o
.PHONY : libft/ft_strjoin.c.o

libft/ft_strjoin.i: libft/ft_strjoin.c.i

.PHONY : libft/ft_strjoin.i

# target to preprocess a source file
libft/ft_strjoin.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strjoin.c.i
.PHONY : libft/ft_strjoin.c.i

libft/ft_strjoin.s: libft/ft_strjoin.c.s

.PHONY : libft/ft_strjoin.s

# target to generate assembly for a file
libft/ft_strjoin.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strjoin.c.s
.PHONY : libft/ft_strjoin.c.s

libft/ft_strlcat.o: libft/ft_strlcat.c.o

.PHONY : libft/ft_strlcat.o

# target to build an object file
libft/ft_strlcat.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlcat.c.o
.PHONY : libft/ft_strlcat.c.o

libft/ft_strlcat.i: libft/ft_strlcat.c.i

.PHONY : libft/ft_strlcat.i

# target to preprocess a source file
libft/ft_strlcat.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlcat.c.i
.PHONY : libft/ft_strlcat.c.i

libft/ft_strlcat.s: libft/ft_strlcat.c.s

.PHONY : libft/ft_strlcat.s

# target to generate assembly for a file
libft/ft_strlcat.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlcat.c.s
.PHONY : libft/ft_strlcat.c.s

libft/ft_strlcpy.o: libft/ft_strlcpy.c.o

.PHONY : libft/ft_strlcpy.o

# target to build an object file
libft/ft_strlcpy.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlcpy.c.o
.PHONY : libft/ft_strlcpy.c.o

libft/ft_strlcpy.i: libft/ft_strlcpy.c.i

.PHONY : libft/ft_strlcpy.i

# target to preprocess a source file
libft/ft_strlcpy.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlcpy.c.i
.PHONY : libft/ft_strlcpy.c.i

libft/ft_strlcpy.s: libft/ft_strlcpy.c.s

.PHONY : libft/ft_strlcpy.s

# target to generate assembly for a file
libft/ft_strlcpy.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlcpy.c.s
.PHONY : libft/ft_strlcpy.c.s

libft/ft_strlen.o: libft/ft_strlen.c.o

.PHONY : libft/ft_strlen.o

# target to build an object file
libft/ft_strlen.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlen.c.o
.PHONY : libft/ft_strlen.c.o

libft/ft_strlen.i: libft/ft_strlen.c.i

.PHONY : libft/ft_strlen.i

# target to preprocess a source file
libft/ft_strlen.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlen.c.i
.PHONY : libft/ft_strlen.c.i

libft/ft_strlen.s: libft/ft_strlen.c.s

.PHONY : libft/ft_strlen.s

# target to generate assembly for a file
libft/ft_strlen.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strlen.c.s
.PHONY : libft/ft_strlen.c.s

libft/ft_strmapi.o: libft/ft_strmapi.c.o

.PHONY : libft/ft_strmapi.o

# target to build an object file
libft/ft_strmapi.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strmapi.c.o
.PHONY : libft/ft_strmapi.c.o

libft/ft_strmapi.i: libft/ft_strmapi.c.i

.PHONY : libft/ft_strmapi.i

# target to preprocess a source file
libft/ft_strmapi.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strmapi.c.i
.PHONY : libft/ft_strmapi.c.i

libft/ft_strmapi.s: libft/ft_strmapi.c.s

.PHONY : libft/ft_strmapi.s

# target to generate assembly for a file
libft/ft_strmapi.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strmapi.c.s
.PHONY : libft/ft_strmapi.c.s

libft/ft_strncmp.o: libft/ft_strncmp.c.o

.PHONY : libft/ft_strncmp.o

# target to build an object file
libft/ft_strncmp.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strncmp.c.o
.PHONY : libft/ft_strncmp.c.o

libft/ft_strncmp.i: libft/ft_strncmp.c.i

.PHONY : libft/ft_strncmp.i

# target to preprocess a source file
libft/ft_strncmp.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strncmp.c.i
.PHONY : libft/ft_strncmp.c.i

libft/ft_strncmp.s: libft/ft_strncmp.c.s

.PHONY : libft/ft_strncmp.s

# target to generate assembly for a file
libft/ft_strncmp.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strncmp.c.s
.PHONY : libft/ft_strncmp.c.s

libft/ft_strnstr.o: libft/ft_strnstr.c.o

.PHONY : libft/ft_strnstr.o

# target to build an object file
libft/ft_strnstr.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strnstr.c.o
.PHONY : libft/ft_strnstr.c.o

libft/ft_strnstr.i: libft/ft_strnstr.c.i

.PHONY : libft/ft_strnstr.i

# target to preprocess a source file
libft/ft_strnstr.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strnstr.c.i
.PHONY : libft/ft_strnstr.c.i

libft/ft_strnstr.s: libft/ft_strnstr.c.s

.PHONY : libft/ft_strnstr.s

# target to generate assembly for a file
libft/ft_strnstr.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strnstr.c.s
.PHONY : libft/ft_strnstr.c.s

libft/ft_strrchr.o: libft/ft_strrchr.c.o

.PHONY : libft/ft_strrchr.o

# target to build an object file
libft/ft_strrchr.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strrchr.c.o
.PHONY : libft/ft_strrchr.c.o

libft/ft_strrchr.i: libft/ft_strrchr.c.i

.PHONY : libft/ft_strrchr.i

# target to preprocess a source file
libft/ft_strrchr.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strrchr.c.i
.PHONY : libft/ft_strrchr.c.i

libft/ft_strrchr.s: libft/ft_strrchr.c.s

.PHONY : libft/ft_strrchr.s

# target to generate assembly for a file
libft/ft_strrchr.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strrchr.c.s
.PHONY : libft/ft_strrchr.c.s

libft/ft_strtrim.o: libft/ft_strtrim.c.o

.PHONY : libft/ft_strtrim.o

# target to build an object file
libft/ft_strtrim.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strtrim.c.o
.PHONY : libft/ft_strtrim.c.o

libft/ft_strtrim.i: libft/ft_strtrim.c.i

.PHONY : libft/ft_strtrim.i

# target to preprocess a source file
libft/ft_strtrim.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strtrim.c.i
.PHONY : libft/ft_strtrim.c.i

libft/ft_strtrim.s: libft/ft_strtrim.c.s

.PHONY : libft/ft_strtrim.s

# target to generate assembly for a file
libft/ft_strtrim.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_strtrim.c.s
.PHONY : libft/ft_strtrim.c.s

libft/ft_substr.o: libft/ft_substr.c.o

.PHONY : libft/ft_substr.o

# target to build an object file
libft/ft_substr.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_substr.c.o
.PHONY : libft/ft_substr.c.o

libft/ft_substr.i: libft/ft_substr.c.i

.PHONY : libft/ft_substr.i

# target to preprocess a source file
libft/ft_substr.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_substr.c.i
.PHONY : libft/ft_substr.c.i

libft/ft_substr.s: libft/ft_substr.c.s

.PHONY : libft/ft_substr.s

# target to generate assembly for a file
libft/ft_substr.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_substr.c.s
.PHONY : libft/ft_substr.c.s

libft/ft_tolower.o: libft/ft_tolower.c.o

.PHONY : libft/ft_tolower.o

# target to build an object file
libft/ft_tolower.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_tolower.c.o
.PHONY : libft/ft_tolower.c.o

libft/ft_tolower.i: libft/ft_tolower.c.i

.PHONY : libft/ft_tolower.i

# target to preprocess a source file
libft/ft_tolower.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_tolower.c.i
.PHONY : libft/ft_tolower.c.i

libft/ft_tolower.s: libft/ft_tolower.c.s

.PHONY : libft/ft_tolower.s

# target to generate assembly for a file
libft/ft_tolower.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_tolower.c.s
.PHONY : libft/ft_tolower.c.s

libft/ft_toupper.o: libft/ft_toupper.c.o

.PHONY : libft/ft_toupper.o

# target to build an object file
libft/ft_toupper.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_toupper.c.o
.PHONY : libft/ft_toupper.c.o

libft/ft_toupper.i: libft/ft_toupper.c.i

.PHONY : libft/ft_toupper.i

# target to preprocess a source file
libft/ft_toupper.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_toupper.c.i
.PHONY : libft/ft_toupper.c.i

libft/ft_toupper.s: libft/ft_toupper.c.s

.PHONY : libft/ft_toupper.s

# target to generate assembly for a file
libft/ft_toupper.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/libft/ft_toupper.c.s
.PHONY : libft/ft_toupper.c.s

lists_func.o: lists_func.c.o

.PHONY : lists_func.o

# target to build an object file
lists_func.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/lists_func.c.o
.PHONY : lists_func.c.o

lists_func.i: lists_func.c.i

.PHONY : lists_func.i

# target to preprocess a source file
lists_func.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/lists_func.c.i
.PHONY : lists_func.c.i

lists_func.s: lists_func.c.s

.PHONY : lists_func.s

# target to generate assembly for a file
lists_func.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/lists_func.c.s
.PHONY : lists_func.c.s

make_env_list.o: make_env_list.c.o

.PHONY : make_env_list.o

# target to build an object file
make_env_list.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/make_env_list.c.o
.PHONY : make_env_list.c.o

make_env_list.i: make_env_list.c.i

.PHONY : make_env_list.i

# target to preprocess a source file
make_env_list.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/make_env_list.c.i
.PHONY : make_env_list.c.i

make_env_list.s: make_env_list.c.s

.PHONY : make_env_list.s

# target to generate assembly for a file
make_env_list.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/make_env_list.c.s
.PHONY : make_env_list.c.s

start.o: start.c.o

.PHONY : start.o

# target to build an object file
start.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/start.c.o
.PHONY : start.c.o

start.i: start.c.i

.PHONY : start.i

# target to preprocess a source file
start.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/start.c.i
.PHONY : start.c.i

start.s: start.c.s

.PHONY : start.s

# target to generate assembly for a file
start.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/start.c.s
.PHONY : start.c.s

utils.o: utils.c.o

.PHONY : utils.o

# target to build an object file
utils.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/utils.c.o
.PHONY : utils.c.o

utils.i: utils.c.i

.PHONY : utils.i

# target to preprocess a source file
utils.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/utils.c.i
.PHONY : utils.c.i

utils.s: utils.c.s

.PHONY : utils.s

# target to generate assembly for a file
utils.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minishell_git_my.dir/build.make CMakeFiles/minishell_git_my.dir/utils.c.s
.PHONY : utils.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... minishell_git_my"
	@echo "... fill_list.o"
	@echo "... fill_list.i"
	@echo "... fill_list.s"
	@echo "... ft_cd.o"
	@echo "... ft_cd.i"
	@echo "... ft_cd.s"
	@echo "... ft_check_redirects.o"
	@echo "... ft_check_redirects.i"
	@echo "... ft_check_redirects.s"
	@echo "... ft_echo.o"
	@echo "... ft_echo.i"
	@echo "... ft_echo.s"
	@echo "... ft_env.o"
	@echo "... ft_env.i"
	@echo "... ft_env.s"
	@echo "... ft_error.o"
	@echo "... ft_error.i"
	@echo "... ft_error.s"
	@echo "... ft_exec.o"
	@echo "... ft_exec.i"
	@echo "... ft_exec.s"
	@echo "... ft_exit.o"
	@echo "... ft_exit.i"
	@echo "... ft_exit.s"
	@echo "... ft_export.o"
	@echo "... ft_export.i"
	@echo "... ft_export.s"
	@echo "... ft_find_path.o"
	@echo "... ft_find_path.i"
	@echo "... ft_find_path.s"
	@echo "... ft_pipe.o"
	@echo "... ft_pipe.i"
	@echo "... ft_pipe.s"
	@echo "... ft_pwd.o"
	@echo "... ft_pwd.i"
	@echo "... ft_pwd.s"
	@echo "... ft_redirect.o"
	@echo "... ft_redirect.i"
	@echo "... ft_redirect.s"
	@echo "... ft_unset.o"
	@echo "... ft_unset.i"
	@echo "... ft_unset.s"
	@echo "... ft_write.o"
	@echo "... ft_write.i"
	@echo "... ft_write.s"
	@echo "... get_value_from_env.o"
	@echo "... get_value_from_env.i"
	@echo "... get_value_from_env.s"
	@echo "... libft/ft_atoi.o"
	@echo "... libft/ft_atoi.i"
	@echo "... libft/ft_atoi.s"
	@echo "... libft/ft_bzero.o"
	@echo "... libft/ft_bzero.i"
	@echo "... libft/ft_bzero.s"
	@echo "... libft/ft_calloc.o"
	@echo "... libft/ft_calloc.i"
	@echo "... libft/ft_calloc.s"
	@echo "... libft/ft_isalnum.o"
	@echo "... libft/ft_isalnum.i"
	@echo "... libft/ft_isalnum.s"
	@echo "... libft/ft_isalpha.o"
	@echo "... libft/ft_isalpha.i"
	@echo "... libft/ft_isalpha.s"
	@echo "... libft/ft_isascii.o"
	@echo "... libft/ft_isascii.i"
	@echo "... libft/ft_isascii.s"
	@echo "... libft/ft_isdigit.o"
	@echo "... libft/ft_isdigit.i"
	@echo "... libft/ft_isdigit.s"
	@echo "... libft/ft_isprint.o"
	@echo "... libft/ft_isprint.i"
	@echo "... libft/ft_isprint.s"
	@echo "... libft/ft_itoa.o"
	@echo "... libft/ft_itoa.i"
	@echo "... libft/ft_itoa.s"
	@echo "... libft/ft_lstadd_back.o"
	@echo "... libft/ft_lstadd_back.i"
	@echo "... libft/ft_lstadd_back.s"
	@echo "... libft/ft_lstadd_front.o"
	@echo "... libft/ft_lstadd_front.i"
	@echo "... libft/ft_lstadd_front.s"
	@echo "... libft/ft_lstlast.o"
	@echo "... libft/ft_lstlast.i"
	@echo "... libft/ft_lstlast.s"
	@echo "... libft/ft_lstnew.o"
	@echo "... libft/ft_lstnew.i"
	@echo "... libft/ft_lstnew.s"
	@echo "... libft/ft_lstsize.o"
	@echo "... libft/ft_lstsize.i"
	@echo "... libft/ft_lstsize.s"
	@echo "... libft/ft_memccpy.o"
	@echo "... libft/ft_memccpy.i"
	@echo "... libft/ft_memccpy.s"
	@echo "... libft/ft_memchr.o"
	@echo "... libft/ft_memchr.i"
	@echo "... libft/ft_memchr.s"
	@echo "... libft/ft_memcmp.o"
	@echo "... libft/ft_memcmp.i"
	@echo "... libft/ft_memcmp.s"
	@echo "... libft/ft_memcpy.o"
	@echo "... libft/ft_memcpy.i"
	@echo "... libft/ft_memcpy.s"
	@echo "... libft/ft_memmove.o"
	@echo "... libft/ft_memmove.i"
	@echo "... libft/ft_memmove.s"
	@echo "... libft/ft_memset.o"
	@echo "... libft/ft_memset.i"
	@echo "... libft/ft_memset.s"
	@echo "... libft/ft_putchar_fd.o"
	@echo "... libft/ft_putchar_fd.i"
	@echo "... libft/ft_putchar_fd.s"
	@echo "... libft/ft_putendl_fd.o"
	@echo "... libft/ft_putendl_fd.i"
	@echo "... libft/ft_putendl_fd.s"
	@echo "... libft/ft_putnbr_fd.o"
	@echo "... libft/ft_putnbr_fd.i"
	@echo "... libft/ft_putnbr_fd.s"
	@echo "... libft/ft_putstr_fd.o"
	@echo "... libft/ft_putstr_fd.i"
	@echo "... libft/ft_putstr_fd.s"
	@echo "... libft/ft_split.o"
	@echo "... libft/ft_split.i"
	@echo "... libft/ft_split.s"
	@echo "... libft/ft_strchr.o"
	@echo "... libft/ft_strchr.i"
	@echo "... libft/ft_strchr.s"
	@echo "... libft/ft_strdup.o"
	@echo "... libft/ft_strdup.i"
	@echo "... libft/ft_strdup.s"
	@echo "... libft/ft_strjoin.o"
	@echo "... libft/ft_strjoin.i"
	@echo "... libft/ft_strjoin.s"
	@echo "... libft/ft_strlcat.o"
	@echo "... libft/ft_strlcat.i"
	@echo "... libft/ft_strlcat.s"
	@echo "... libft/ft_strlcpy.o"
	@echo "... libft/ft_strlcpy.i"
	@echo "... libft/ft_strlcpy.s"
	@echo "... libft/ft_strlen.o"
	@echo "... libft/ft_strlen.i"
	@echo "... libft/ft_strlen.s"
	@echo "... libft/ft_strmapi.o"
	@echo "... libft/ft_strmapi.i"
	@echo "... libft/ft_strmapi.s"
	@echo "... libft/ft_strncmp.o"
	@echo "... libft/ft_strncmp.i"
	@echo "... libft/ft_strncmp.s"
	@echo "... libft/ft_strnstr.o"
	@echo "... libft/ft_strnstr.i"
	@echo "... libft/ft_strnstr.s"
	@echo "... libft/ft_strrchr.o"
	@echo "... libft/ft_strrchr.i"
	@echo "... libft/ft_strrchr.s"
	@echo "... libft/ft_strtrim.o"
	@echo "... libft/ft_strtrim.i"
	@echo "... libft/ft_strtrim.s"
	@echo "... libft/ft_substr.o"
	@echo "... libft/ft_substr.i"
	@echo "... libft/ft_substr.s"
	@echo "... libft/ft_tolower.o"
	@echo "... libft/ft_tolower.i"
	@echo "... libft/ft_tolower.s"
	@echo "... libft/ft_toupper.o"
	@echo "... libft/ft_toupper.i"
	@echo "... libft/ft_toupper.s"
	@echo "... lists_func.o"
	@echo "... lists_func.i"
	@echo "... lists_func.s"
	@echo "... make_env_list.o"
	@echo "... make_env_list.i"
	@echo "... make_env_list.s"
	@echo "... start.o"
	@echo "... start.i"
	@echo "... start.s"
	@echo "... utils.o"
	@echo "... utils.i"
	@echo "... utils.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

